[debug] [2024-04-21T19:29:46.228Z] ----------------------------------------------------------------------
[debug] [2024-04-21T19:29:46.230Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Lenovo\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2024-04-21T19:29:46.230Z] CLI Version:   13.7.3
[debug] [2024-04-21T19:29:46.231Z] Platform:      win32
[debug] [2024-04-21T19:29:46.231Z] Node Version:  v18.17.1
[debug] [2024-04-21T19:29:46.232Z] Time:          Sun Apr 21 2024 22:29:46 GMT+0300 (GMT+03:00)
[debug] [2024-04-21T19:29:46.232Z] ----------------------------------------------------------------------
[debug] 
[debug] [2024-04-21T19:29:46.240Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2024-04-21T19:29:46.240Z] > authorizing via signed-in user (tas349873@gmail.com)
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\Lenovo\Desktop\vue-playlist-app

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2024-04-21T19:30:37.703Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects pageSize=100
[debug] [2024-04-21T19:30:38.214Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects 200
[debug] [2024-04-21T19:30:38.214Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects [omitted]
[info] i  Using project playlist-vue-6006c (playList-vue) 
[info] 
=== Firestore Setup
[debug] [2024-04-21T19:30:44.377Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/playlist-vue-6006c/services/firestore.googleapis.com [none]
[debug] [2024-04-21T19:30:44.377Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/playlist-vue-6006c/services/firestore.googleapis.com x-goog-quota-user=projects/playlist-vue-6006c
[debug] [2024-04-21T19:30:45.894Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/playlist-vue-6006c/services/firestore.googleapis.com 200
[debug] [2024-04-21T19:30:45.894Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/playlist-vue-6006c/services/firestore.googleapis.com [omitted]
[debug] [2024-04-21T19:30:45.895Z] >>> [apiv2][query] GET https://firestore.googleapis.com/v1/projects/playlist-vue-6006c/databases/(default) [none]
[debug] [2024-04-21T19:30:46.285Z] <<< [apiv2][status] GET https://firestore.googleapis.com/v1/projects/playlist-vue-6006c/databases/(default) 200
[debug] [2024-04-21T19:30:46.285Z] <<< [apiv2][body] GET https://firestore.googleapis.com/v1/projects/playlist-vue-6006c/databases/(default) {"name":"projects/playlist-vue-6006c/databases/(default)","uid":"a57ecf05-31a5-4ebd-b7c4-f56caf860f50","createTime":"2024-04-21T18:32:00.874758Z","updateTime":"2024-04-21T18:32:00.874758Z","locationId":"eur3","type":"FIRESTORE_NATIVE","concurrencyMode":"PESSIMISTIC","versionRetentionPeriod":"3600s","earliestVersionTime":"2024-04-21T18:32:00.874758Z","appEngineIntegrationMode":"DISABLED","keyPrefix":"e","pointInTimeRecoveryEnablement":"POINT_IN_TIME_RECOVERY_DISABLED","deleteProtectionState":"DELETE_PROTECTION_DISABLED","etag":"IKu6tt2F1IUDMNio5ZyB1IUD"}
[debug] [2024-04-21T19:30:46.285Z] database_type: FIRESTORE_NATIVE
[debug] [2024-04-21T19:30:46.286Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2024-04-21T19:30:46.286Z] > authorizing via signed-in user (tas349873@gmail.com)
[debug] [2024-04-21T19:30:46.286Z] [iam] checking project playlist-vue-6006c for permissions ["firebase.projects.get"]
[debug] [2024-04-21T19:30:46.286Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/playlist-vue-6006c:testIamPermissions [none]
[debug] [2024-04-21T19:30:46.286Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/playlist-vue-6006c:testIamPermissions x-goog-quota-user=projects/playlist-vue-6006c
[debug] [2024-04-21T19:30:46.286Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/playlist-vue-6006c:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2024-04-21T19:30:46.607Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/playlist-vue-6006c:testIamPermissions 200
[debug] [2024-04-21T19:30:46.607Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/playlist-vue-6006c:testIamPermissions {"permissions":["firebase.projects.get"]}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2024-04-21T19:31:09.733Z] >>> [apiv2][query] GET https://firebaserules.googleapis.com/v1/projects/playlist-vue-6006c/releases pageSize=10&pageToken=
[debug] [2024-04-21T19:31:10.190Z] <<< [apiv2][status] GET https://firebaserules.googleapis.com/v1/projects/playlist-vue-6006c/releases 200
[debug] [2024-04-21T19:31:10.190Z] <<< [apiv2][body] GET https://firebaserules.googleapis.com/v1/projects/playlist-vue-6006c/releases {"releases":[{"name":"projects/playlist-vue-6006c/releases/cloud.firestore","rulesetName":"projects/playlist-vue-6006c/rulesets/76d4ec13-c591-4f51-95ae-3a3d327d8960","createTime":"2024-04-21T18:32:03.855076Z","updateTime":"2024-04-21T18:34:32.892472Z"}]}
[debug] [2024-04-21T19:31:10.190Z] Found ruleset: projects/playlist-vue-6006c/rulesets/76d4ec13-c591-4f51-95ae-3a3d327d8960
[debug] [2024-04-21T19:31:10.191Z] >>> [apiv2][query] GET https://firebaserules.googleapis.com/v1/projects/playlist-vue-6006c/rulesets/76d4ec13-c591-4f51-95ae-3a3d327d8960 [none]
[debug] [2024-04-21T19:31:10.969Z] <<< [apiv2][status] GET https://firebaserules.googleapis.com/v1/projects/playlist-vue-6006c/rulesets/76d4ec13-c591-4f51-95ae-3a3d327d8960 200
[debug] [2024-04-21T19:31:10.969Z] <<< [apiv2][body] GET https://firebaserules.googleapis.com/v1/projects/playlist-vue-6006c/rulesets/76d4ec13-c591-4f51-95ae-3a3d327d8960 [omitted]
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
